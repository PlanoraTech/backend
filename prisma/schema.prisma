// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Institutions {
  id           String         @id @default(uuid())
  name         String         @unique
  groups       Groups[]
  presentators Presentators[]
  subjects     Subjects[]
  rooms        Rooms[]
  timeTables   TimeTables[]
}

model Groups {
  id            String       @id @default(uuid())
  name          String       @unique
  timeTables    TimeTables[]
  institution   Institutions @relation(fields: [institutionId], references: [id])
  institutionId String
}

model Presentators {
  id            String         @id @default(uuid())
  name          String         @unique
  appointments  Appointments[]
  institution   Institutions   @relation(fields: [institutionId], references: [id])
  institutionId String
}

model Subjects {
  id            String         @id @default(uuid())
  name          String         @unique
  appointments  Appointments[]
  institution   Institutions   @relation(fields: [institutionId], references: [id])
  institutionId String
}

model Rooms {
  id            String         @id @default(uuid())
  name          String         @unique
  isAvailable   Boolean
  appointments  Appointments[]
  institution   Institutions   @relation(fields: [institutionId], references: [id])
  institutionId String
}

model TimeTables {
  id            String         @id @default(uuid())
  group         Groups         @relation(fields: [groupId], references: [id])
  groupId       String
  appointments  Appointments[]
  institution   Institutions   @relation(fields: [institutionId], references: [id])
  institutionId String
}

model Appointments {
  id            String       @id @default(uuid())
  subject       Subjects     @relation(fields: [subjectId], references: [id])
  subjectId     String
  presentator   Presentators @relation(fields: [presentatorId], references: [id])
  presentatorId String
  room          Rooms        @relation(fields: [roomId], references: [id])
  roomId        String
  dayOfWeek     String
  start         DateTime
  end           DateTime
  TimeTables    TimeTables[]
}